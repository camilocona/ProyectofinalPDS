# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zwH48oDbK6L5aPv0wfFSJWZnueewYUAH
"""

import pandas as pd
import matplotlib.pyplot as plt

# Cargar el archivo CSV
nombre_archivo = 'katalog_gempa2.csv'
# Supongamos que las columnas están separadas por comas y no hay encabezado
data = pd.read_csv(nombre_archivo, sep=',', header=None)

# Asignar nombres a las columnas
data.columns = ['fecha', 'hora', 'latitud', 'longitud', 'profundidad', 'magnitud', 'localizacion']

# Verificar los primeros datos para entender la estructura del dataset
print(data.head())

# Convertir 'fecha' y 'hora' a formato datetime para facilitar los cálculos
data['timestamp'] = pd.to_datetime(data['fecha'] + ' ' + data['hora'])

# Calcular la diferencia de tiempo entre muestras consecutivas
diferencia_tiempo = data['timestamp'].diff().dropna()

# Calcular la frecuencia de muestreo
frecuencia_muestreo = 1 / diferencia_tiempo.mean().total_seconds()

print(f'La frecuencia de muestreo es: {frecuencia_muestreo} Hz')

# Graficar los datos
plt.figure(figsize=(10, 6))
plt.plot(data['timestamp'], data['magnitud'], marker='o', linestyle='-', color='blue')
plt.title('Gráfico de Magnitud en función del Tiempo')
plt.xlabel('Tiempo')
plt.ylabel('Magnitud')
plt.grid(True)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Cargar el archivo CSV
nombre_archivo = 'katalog_gempa.csv'

# Leer el archivo CSV y nombrar las columnas
#columnas = ['tgl', 'ot', 'lat', 'lon', 'depth', 'mag', 'remark']
data = pd.read_csv(nombre_archivo)

# Combinar columnas 'Fecha' y 'Hora' en una sola columna 'Tiempo' como objeto DateTime
data['Tiempo'] = pd.to_datetime(data['tgl'] + ' ' + data['ot'])

# Calcular la diferencia entre valores de tiempo adyacentes
diferencia_tiempo = data['Tiempo'].diff()

# Calcular la frecuencia de muestreo como la inversa del intervalo de tiempo promedio
frecuencia_muestreo = 1 / diferencia_tiempo.mean().total_seconds()

print(f'La frecuencia de muestreo es: {frecuencia_muestreo} Hz')

# Graficar los datos de tiempo
plt.figure(figsize=(10, 6))
plt.plot(data['Tiempo'], data['mag'], linestyle='-', color='b')
plt.title('Gráfico de Magnitud en función del Tiempo')
plt.xlabel('Tiempo')
plt.ylabel('Magnitud')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

pip install obspy

import numpy as np
import matplotlib.pyplot as plt
from obspy import Trace, UTCDateTime

# Parámetros del terremoto
magnitud = 4.5
profundidad = 37.4  # en kilómetros

# Crear una traza de datos sísmicos sintéticos
# Aquí, simplemente se genera ruido aleatorio para simular la señal
tiempo_inicio = UTCDateTime()
duracion = 60  # Duración en segundos
sampling_rate = 100  # Tasa de muestreo en Hz
num_muestras = duracion * sampling_rate
traza_sintetica = Trace(data=np.random.randn(num_muestras))
traza_sintetica.stats.starttime = tiempo_inicio
traza_sintetica.stats.sampling_rate = sampling_rate
traza_sintetica.stats.network = 'SY'
traza_sintetica.stats.station = 'SIMULACION'

# Graficar la señal sísmica sintética
plt.figure(figsize=(10, 4))
plt.plot(traza_sintetica.times(), traza_sintetica.data, 'k')
plt.xlabel('Tiempo (s)')
plt.ylabel('Amplitud')
plt.title(f"Señal Sísmica Sintética - Magnitud: {magnitud}, Profundidad: {profundidad} km")
plt.grid(True)
plt.show()